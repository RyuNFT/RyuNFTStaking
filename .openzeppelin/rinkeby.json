{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x78C2EEEdb8e27eE6c0B0385742632D57C45b6C60",
    "txHash": "0xde773cbd5df3772f9455bc3cad75f30ecff53d5e87bf3e7e5c2a1626030588bc",
    "deployTransaction": {
      "hash": "0xde773cbd5df3772f9455bc3cad75f30ecff53d5e87bf3e7e5c2a1626030588bc",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x2E6558Cdd542d487B8c19859b40aFF08eB465261",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x956a5912"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f900"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x956a5912"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 122,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x19fe8c411f9a4ab951c915a5571166b70ad8a99ece5ff9243b144eaa0c0ac9f4",
      "s": "0x74847ef712b7592b8ac0c99792163d7dcb5d052d3b82ca5b68999af746085099",
      "v": 1,
      "creates": "0x78C2EEEdb8e27eE6c0B0385742632D57C45b6C60",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xADb01D1463D096B3a1C3a6D782Ab87261A7d2A0F",
      "txHash": "0x8da5783a024abff4ff72aa8ff10d06d8bdde7401cb60a1cc99b7a117877774fe",
      "kind": "transparent"
    },
    {
      "address": "0x02e4648fa39f7daf365b95dD85849c1E1CaE7731",
      "txHash": "0x678a47a5321f79d1a2a799350258c3d5dd00c41e44266d14563c2cdb28665c78",
      "kind": "transparent"
    },
    {
      "address": "0x4C0d2F2ED4CA426efaf82678F1c2E02c98e2e05F",
      "txHash": "0x24f0733a06225fa5441d9e20a747ba05ffd9769706c0b2636fdaf98d2076e8ab",
      "kind": "transparent"
    },
    {
      "address": "0xF9D2c465DFd60133c70F95cE4966d559D27D5653",
      "txHash": "0xf9878c24a8c6f7a53a177849fc33acbf45ebac410a081fd7b68e1a6ecd4e3c82",
      "kind": "transparent"
    },
    {
      "address": "0x3e653e74ad2922AcBdc8EaC900F8C89c8D926226",
      "txHash": "0xe9ce1b99755701d5a016924ca1246f94541df4cb838871134011c62968f93fcc",
      "kind": "transparent"
    },
    {
      "address": "0x613DbC3a6A4c6CB8932B4Cf9c9f198F7c4a98CdC",
      "txHash": "0x7ec5ca494ff65ea4872769d75684cb39bacdd1e718c9ea7841652ac33cb01e2b",
      "kind": "transparent"
    },
    {
      "address": "0x939D85D63e8f4FF8544ac4ca53AA9071058d7834",
      "txHash": "0xc28ebdd17cce8ee73612b0cfe13cf96c87d681e2803d9aeb64a9fc63c2490224",
      "kind": "transparent"
    },
    {
      "address": "0x41196c5d03055787B5Ac10F0831835f4512A0944",
      "txHash": "0x7c0f5cb9a627e7a2c3cc0aaaf0715dcf147aa90d8db1d935cd15c7f3495cd6ca",
      "kind": "transparent"
    },
    {
      "address": "0xee35f8Eb49D41a7350dfb370119ae04893509417",
      "txHash": "0xc53d8af309bde0524527b0fe09d5c074a3e9c67db063cf5752f1cbd764f2d506",
      "kind": "uups"
    },
    {
      "address": "0xd0a5f7145f6479cAF938B56cD96a2485F72d15a9",
      "txHash": "0x92099a3253be4021d53cd37af5ab660f9a406384e237f9fb5280f41c2b55dc1f",
      "kind": "uups"
    },
    {
      "address": "0x56B7790855704c32B9DdB0d40f752da4A17CF315",
      "txHash": "0xb9af82986e9925289e5528e44d340752aca4a9bf50b61e2eb1fdbad0f6506836",
      "kind": "uups"
    },
    {
      "address": "0x539929831dC1DFca88Eef19D5F54C26fdc5Fa1E0",
      "txHash": "0x07618ec2f6b1234a3319c2fd0790cc1bb60d026e86b5c2dd36a8144939ba3065",
      "kind": "uups"
    },
    {
      "address": "0x4F13442510D22F93eC75a7F09e11b35f5d5ACF04",
      "txHash": "0x630f867c7b4b8c209cd096d4fb62aa0b83791200480be4fb826e39a323f1c448",
      "kind": "uups"
    },
    {
      "address": "0x2cCD4F4F7822df54B961ceBef4AA1A2A6bB2460f",
      "txHash": "0x8d48112e8372dba41effd5cd506f6d085b80ad5acc0bc1706d3e61f2815e054b",
      "kind": "uups"
    },
    {
      "address": "0x11804C37E07c2411a904f357e415daF48B925009",
      "txHash": "0x24569d41b5b664fb960bf2687c39112ad3bd960d63130395b71e128ae6653606",
      "kind": "uups"
    },
    {
      "address": "0xE162957e50B6434B881Bef81ed88b514AB32083d",
      "txHash": "0x2f39c34da295322fe90fe9bad790081619e204c43f286567200db01c638c46f5",
      "kind": "uups"
    },
    {
      "address": "0x3F0f1CE31e2481f8Daf8940dc2Bd6800da566a79",
      "txHash": "0xf2ef8150a2f4ac457f9b16e6f519cb6539f2a04966b7620161bee6aabaa3bb86",
      "kind": "uups"
    }
  ],
  "impls": {
    "836681bd50bad830760e34a01377707cd8b9a948a4c469375a08de433f2323e5": {
      "address": "0x728695954eBaa20b1033fC1Acf93568e606311C3",
      "txHash": "0x09d31a6d2ec327cbae3a733219b8919d75b5602adbb1135a6beff1e5c5d82fdc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Polygods",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/Polygods.sol:49"
          },
          {
            "contract": "Polygods",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/Polygods.sol:50"
          },
          {
            "contract": "Polygods",
            "label": "currentTokenId",
            "type": "t_struct(Counter)3798_storage",
            "src": "contracts/Polygods.sol:52"
          },
          {
            "contract": "Polygods",
            "label": "basicAttrs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(BasicAttr)4407_storage))",
            "src": "contracts/Polygods.sol:54"
          },
          {
            "contract": "Polygods",
            "label": "attrs",
            "type": "t_mapping(t_uint256,t_struct(Attr)4414_storage)",
            "src": "contracts/Polygods.sol:55"
          },
          {
            "contract": "Polygods",
            "label": "warriorTypeString",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/Polygods.sol:56"
          },
          {
            "contract": "Polygods",
            "label": "hps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Polygods.sol:57"
          },
          {
            "contract": "Polygods",
            "label": "lastTimeStamps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Polygods.sol:58"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)3798_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(BasicAttr)4407_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Polygods.BasicAttr))"
          },
          "t_mapping(t_uint256,t_struct(BasicAttr)4407_storage)": {
            "label": "mapping(uint256 => struct Polygods.BasicAttr)"
          },
          "t_struct(BasicAttr)4407_storage": {
            "label": "struct Polygods.BasicAttr",
            "members": [
              {
                "label": "typeId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "maxHP",
                "type": "t_uint8"
              },
              {
                "label": "damage",
                "type": "t_uint8"
              },
              {
                "label": "armour",
                "type": "t_uint8"
              },
              {
                "label": "stamina",
                "type": "t_uint8"
              },
              {
                "label": "agility",
                "type": "t_uint8"
              },
              {
                "label": "artUri",
                "type": "t_string_storage"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "recoveryTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Attr)4414_storage)": {
            "label": "mapping(uint256 => struct Polygods.Attr)"
          },
          "t_struct(Attr)4414_storage": {
            "label": "struct Polygods.Attr",
            "members": [
              {
                "label": "typeId",
                "type": "t_uint256"
              },
              {
                "label": "hp",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea7d975046ac726ebf9c90344644f80f7bc664bca563e0269ee0a34ceb50e2aa": {
      "address": "0x00FdfA1bde9E95944A4a31894BB02B60998fDe54",
      "txHash": "0x67e3a5c541e0330174cbb04edd7952e3f7b36d31a7d5ff234540704a27d74413",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Polygods",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/Polygods.sol:48"
          },
          {
            "contract": "Polygods",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/Polygods.sol:49"
          },
          {
            "contract": "Polygods",
            "label": "currentTokenId",
            "type": "t_struct(Counter)3798_storage",
            "src": "contracts/Polygods.sol:51"
          },
          {
            "contract": "Polygods",
            "label": "basicAttrs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(BasicAttr)4358_storage))",
            "src": "contracts/Polygods.sol:53"
          },
          {
            "contract": "Polygods",
            "label": "attrs",
            "type": "t_mapping(t_uint256,t_struct(Attr)4363_storage)",
            "src": "contracts/Polygods.sol:54"
          },
          {
            "contract": "Polygods",
            "label": "warriorTypeString",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/Polygods.sol:55"
          },
          {
            "contract": "Polygods",
            "label": "hps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Polygods.sol:56"
          },
          {
            "contract": "Polygods",
            "label": "lastTimeStamps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Polygods.sol:57"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)3798_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(BasicAttr)4358_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Polygods.BasicAttr))"
          },
          "t_mapping(t_uint256,t_struct(BasicAttr)4358_storage)": {
            "label": "mapping(uint256 => struct Polygods.BasicAttr)"
          },
          "t_struct(BasicAttr)4358_storage": {
            "label": "struct Polygods.BasicAttr",
            "members": [
              {
                "label": "typeId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "maxHP",
                "type": "t_uint8"
              },
              {
                "label": "damage",
                "type": "t_uint8"
              },
              {
                "label": "armour",
                "type": "t_uint8"
              },
              {
                "label": "stamina",
                "type": "t_uint8"
              },
              {
                "label": "agility",
                "type": "t_uint8"
              },
              {
                "label": "artUri",
                "type": "t_string_storage"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "recoveryTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Attr)4363_storage)": {
            "label": "mapping(uint256 => struct Polygods.Attr)"
          },
          "t_struct(Attr)4363_storage": {
            "label": "struct Polygods.Attr",
            "members": [
              {
                "label": "typeId",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "532fa6335b2ca650f33b8c2948113b5e90b5aa422ae1c04ecf97d79db4af5877": {
      "address": "0xf3aCbF64738541aEEd382793Ac18c34F5a19BeCF",
      "txHash": "0xf539b3b77cc0a840d46c9bae305c98c6acbce9485f1232a3c02d1b99045366cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Pack",
            "label": "currentTokenId",
            "type": "t_struct(Counter)3798_storage",
            "src": "contracts/Pack.sol:21"
          },
          {
            "contract": "Pack",
            "label": "attrs",
            "type": "t_mapping(t_uint256,t_struct(Attr)4342_storage)",
            "src": "contracts/Pack.sol:28"
          },
          {
            "contract": "Pack",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/Pack.sol:29"
          },
          {
            "contract": "Pack",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/Pack.sol:30"
          },
          {
            "contract": "Pack",
            "label": "artUri",
            "type": "t_string_storage",
            "src": "contracts/Pack.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3798_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Attr)4342_storage)": {
            "label": "mapping(uint256 => struct Pack.Attr)"
          },
          "t_struct(Attr)4342_storage": {
            "label": "struct Pack.Attr",
            "members": [
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f956fae8b019095d408af4ed41869155a8f4718bd6e34d16c15b2631f9f237a": {
      "address": "0xb9De10468A388CF08d377B87ac2FB162CEA0D5b6",
      "txHash": "0x4cd4d3253a7a1310115c1723b867709fa02d7aefa26efc0a294d6f2591ee3765",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC2981PerTokenRoyalties",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3934_storage)",
            "src": "contracts/lib/ERC2981PerTokenRoyalties.sol:10"
          },
          {
            "contract": "Ryu",
            "label": "indexer",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Ryu.sol:28"
          },
          {
            "contract": "Ryu",
            "label": "indexerLength",
            "type": "t_uint256",
            "src": "contracts/Ryu.sol:30"
          },
          {
            "contract": "Ryu",
            "label": "tokenIDMap",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Ryu.sol:31"
          },
          {
            "contract": "Ryu",
            "label": "takenImages",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Ryu.sol:32"
          },
          {
            "contract": "Ryu",
            "label": "earlyMinter",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Ryu.sol:33"
          },
          {
            "contract": "Ryu",
            "label": "baseUri",
            "type": "t_string_storage",
            "src": "contracts/Ryu.sol:35"
          },
          {
            "contract": "Ryu",
            "label": "minted",
            "type": "t_uint256",
            "src": "contracts/Ryu.sol:36"
          },
          {
            "contract": "Ryu",
            "label": "canClaim",
            "type": "t_bool",
            "src": "contracts/Ryu.sol:37"
          },
          {
            "contract": "Ryu",
            "label": "earlyClaim",
            "type": "t_bool",
            "src": "contracts/Ryu.sol:38"
          },
          {
            "contract": "Ryu",
            "label": "gross",
            "type": "t_uint256",
            "src": "contracts/Ryu.sol:39"
          },
          {
            "contract": "Ryu",
            "label": "withdrawAddress",
            "type": "t_address",
            "src": "contracts/Ryu.sol:40"
          },
          {
            "contract": "Ryu",
            "label": "royaltyAddress",
            "type": "t_address",
            "src": "contracts/Ryu.sol:41"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3934_storage)": {
            "label": "mapping(uint256 => struct ERC2981Base.RoyaltyInfo)"
          },
          "t_struct(RoyaltyInfo)3934_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "39b35bf518e1bcc1f449740392a337684268c14315f71ed07294e19fe7119036": {
      "address": "0x95cb37a667648b32ad1c6d1B0528F71224dB0c90",
      "txHash": "0xe24019d8f9a8f8a3563b349f47195daf0336e6f10b4e02b086275a5126258245",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC2981PerTokenRoyalties",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3934_storage)",
            "src": "contracts/lib/ERC2981PerTokenRoyalties.sol:10"
          },
          {
            "contract": "Ryu",
            "label": "indexer",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Ryu.sol:28"
          },
          {
            "contract": "Ryu",
            "label": "indexerLength",
            "type": "t_uint256",
            "src": "contracts/Ryu.sol:30"
          },
          {
            "contract": "Ryu",
            "label": "tokenIDMap",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Ryu.sol:31"
          },
          {
            "contract": "Ryu",
            "label": "takenImages",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Ryu.sol:32"
          },
          {
            "contract": "Ryu",
            "label": "earlyMinter",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Ryu.sol:33"
          },
          {
            "contract": "Ryu",
            "label": "baseUri",
            "type": "t_string_storage",
            "src": "contracts/Ryu.sol:35"
          },
          {
            "contract": "Ryu",
            "label": "minted",
            "type": "t_uint256",
            "src": "contracts/Ryu.sol:36"
          },
          {
            "contract": "Ryu",
            "label": "canClaim",
            "type": "t_bool",
            "src": "contracts/Ryu.sol:37"
          },
          {
            "contract": "Ryu",
            "label": "earlyClaim",
            "type": "t_bool",
            "src": "contracts/Ryu.sol:38"
          },
          {
            "contract": "Ryu",
            "label": "gross",
            "type": "t_uint256",
            "src": "contracts/Ryu.sol:39"
          },
          {
            "contract": "Ryu",
            "label": "withdrawAddress",
            "type": "t_address",
            "src": "contracts/Ryu.sol:40"
          },
          {
            "contract": "Ryu",
            "label": "royaltyAddress",
            "type": "t_address",
            "src": "contracts/Ryu.sol:41"
          },
          {
            "contract": "Ryu_V2",
            "label": "isLegends",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/Ryu_V2.sol:9"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3934_storage)": {
            "label": "mapping(uint256 => struct ERC2981Base.RoyaltyInfo)"
          },
          "t_struct(RoyaltyInfo)3934_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
